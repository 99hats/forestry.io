# Configuration for deployment to AWS with CircleCI
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
version: 2
jobs:
  build:
    docker:
    - image: circleci/node:7.10

    working_directory: ~/repo

    steps:
    - checkout

    - restore_cache:
        keys:
        - node-dependencies-{{ checksum "package.json" }}
        # fallback to using the latest cache if no exact match is found
        - node-dependencies-

    - run: 
        name: Install Node Dependencies
        command: |
          yarn install

    - save_cache:
        paths:
          - node_modules
        key: node-dependencies-{{ checksum "package.json" }}

    - run:
        name: Log Versions
        command: |
          node -v
          npm -v
          python -v
          aws -v
        background: true
    
    - run:
        name: Run build
        command: npm run build

    - run:
        command: |
          tar -zcvf dist.tar.gz ./dist
    
    - store_artifacts:
        path: ~/dist.tar.gz

  deploy:
    docker:
    - image: circleci/python:2.7.13

    working_directory: ~/repo

    steps:
    - run:
        ame: Install Python Dependencies
        command: |
          sudo apt-get update
          sudo apt-get upgrade -y
          sudo apt-get install -y --no-install-recommends build-essential g++ sudo python2.7 python2.7-dev unzip curl
          sudo rm -rf /var/lib/apt/lists/*
          sudo mkdir -p /tmp
          cd /tmp
          curl -O https://bootstrap.pypa.io/get-pip.py
          sudo python get-pip.py
          sudo pip install awscli
          sudo rm -f /tmp/get-pip.py

    # Add any SSH keys from CircleCI
    - add_ssh_keys

    - run:
        name: Restore build artifacts
        command: |
          export CIRCLE_TOKEN='d3bc8231bbed1598320818e74b990351f4e1e600'

          curl https://circleci.com/api/v1.1/project/gh/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/${CIRCLE_BUILD_NUM}/artifacts?circle-token=${CIRCLE_TOKEN} | grep -o 'https://[^"]*' > artifacts.txt

          <artifacts.txt xargs -P4 -I % wget %?circle-token=$CIRCLE_TOKEN
          tar -xvzf dist.tar.gz

    - deploy:
        name: "Deploy website to AWS S3"
        command: |
          if [[ "${CIRCLE_BRANCH}" == "master" ]]; then
            echo "Deploying branch master to S3"
            aws s3 sync ./dist s3://${AWS_S3_BRANCH}
          else
            echo "Successfully built ${CIRCLE_BRANCH}"
          fi
      
workflows:
  version: 2
  build-and-deploy:
    jobs:
    - build
    - deploy:
        requires:
          - build